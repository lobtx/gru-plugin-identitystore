<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Plugin Identity Store</title>
    </properties>
    <body>
        <section name="Plugin Identity Store">
            <p>
                <img src="images/identitystore.png" />
            </p>
            <subsection name="Introduction">
                <p>This plugin stores identities. An identity is composed of attributes. Each attribute can be read, written or certified by the application calling the service.</p>
            </subsection>
            <subsection name="REST API">
                <p>
                   The plugin provides a REST API to manage identities. Several versions of the API can be called:
                   <ul>
                        <li>Version 1 : the URL to use is <code>/identity/rest/identitystore/v1/identity</code>. This version uses the objects of the packages <code>fr.paris.lutece.plugins.identitystore.v1.*</code> of the <code>library-identitystore</code>.</li>
                        <li>Version 2 : the URL to use is <code>/identity/rest/identitystore/v2/identity</code>. This version uses the objects of the packages <code>fr.paris.lutece.plugins.identitystore.v2.*</code> of the <code>library-identitystore</code>.</li>
                   </ul>
                </p>
                <p>
                    The API can be called without version in the URL : <code>/identity/rest/identitystore/identity</code>. The used version is then the one configured with the key <code>identitystore.version</code> of the configuration file <code>identitystore.properties</code>. <strong>Warning: </strong>As the different versions of the API do not use the same objects, be sure the correct version is set in configuration.
                </p>
            </subsection>
            <subsection name="Encryption of identities">
                <p>
                    The plugin can use identities with encrypted ids. This mechanism permits to have a specific id for each service provider. Thus, the id is not shared.
                </p>
                <p>
                    To use encryption, the site has to contain a class implementing the interface <code>fr.paris.lutece.plugins.identitystore.service.encryption.IIdentityEncryptionService</code> from the library <code>gru-library-identitystore</code>.
                    For example, add the plugin <code>gru-plugin-grukeydiversification</code> in the <code>pom.xml</code> of the site. The encryption is then enabled.
                </p>
            </subsection>
            <subsection name="Configuration">
                <p>
                    The bean names <code>identitystore.identityInfoExternalProvider</code> must be defined using Spring configuration. The bean must implement the Java interface <code>fr.paris.lutece.plugins.identitystore.service.external.IIdentityInfoExternalProvider</code>. It is used to create an identity from an external source when a connection id is provided in the web method <em>create</em>.
                </p>
            </subsection>
            <subsection name="Usage">
                <p>
                    The plugins exposes web methods to manage identities. Check <em>/jsp/site/Portal.jsp?page=swaggerui</em> page for more details about these methods.
                </p>
            </subsection>
             <subsection name="Deletion of the identity">
                <p>
                    The deletion of an identity from the web service does not really delete it but flags it as 'deleted'. The attributes are deleted.
                    Updating or retrieving an identity flagged 'deleted ' from the web service generates an exception.
                </p>
                <p>
                    Deleting an identity from the GUI completely deletes the identity from the BDD.
                </p>
            </subsection>
        </section>
    </body>
</document>

